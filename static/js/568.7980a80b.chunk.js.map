{"version":3,"file":"static/js/568.7980a80b.chunk.js","mappings":"4TAGMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,EAAuB,GAAvBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAsCC,GAAtC,kGAE+BC,IAAAA,IAAUD,GAFzC,cAEcE,EAFd,gBAG6BA,EAASC,KAHtC,cAGcC,EAHd,yBAIeA,GAJf,yCAMQC,MAAM,GAAD,cACLC,QAAQC,IAAR,MAPR,kBAQeC,QAAQC,OAAR,OARf,iFAYO,SAASC,IAEZ,OAAOX,EAAuB,GAAD,OAAIF,EAAJ,6CAAiDC,IAG3E,SAASa,EAAkBC,GAC9B,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,6CAA4Ec,IAGtG,SAASC,EAAqBC,GACjC,OAAOf,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBiB,EAArB,oBAAmChB,IAG7D,SAASiB,EAAqBD,GACjC,OAAOf,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBiB,EAArB,4BAA2ChB,IAGrE,SAASkB,EAAqBF,GACjC,OAAOf,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBiB,EAArB,4BAA2ChB,EAA3C,c,6GCnCjC,EAA6B,4BAA7B,EAAqE,2BAArE,EAA+G,8B,SC8B/G,EA1BgB,WACd,IAAQgB,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAqBF,GAAIQ,KAAKF,KAC7B,CAACN,KAGF,gCACGK,GAAqC,IAA1BA,EAAQI,gBAClB,qEAEF,eAAIC,UAAWC,EAAf,SACGN,GACCA,EAAQO,QAAQC,KAAI,SAAAC,GAAM,OACxB,gBAAoBJ,UAAWC,EAA/B,WACE,eAAID,UAAWC,EAAf,SAAgCG,EAAOC,UACvC,uBAAID,EAAOE,YAFJF,EAAOd","sources":["services/filmApi.js","webpack://goit-react-hw-05-movies/./src/views/Reviews/Reviews.module.css?ff11","views/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '43826aff38e7e981731c2a4c4f74555d';\n\nasync function fetchWithErrorHandling(url) {\n    try {\n        const response = await axios.get(url);\n        const movies = await response.data;\n        return movies;\n      } catch (error) {\n        alert(`${error}`);\n        console.log(error)\n        return Promise.reject(error);\n      }\n}\n\nexport function fetchPopularFilms() {\n\n    return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?page=1&api_key=${KEY}`)\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(`${BASE_URL}search/movie?api_key=${KEY}&page=1&include_adult=false&query=${query}`)  \n}\n\nexport function fetchGetMovieDetails(id) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n  }\n\nexport function fetchGetMovieCredits(id) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`) \n}\n\nexport function fetchGetMovieReviews(id) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&page=1`) \n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__FNpjp\",\"reviewBox\":\"Reviews_reviewBox__uDOwO\",\"reviewAuthor\":\"Reviews_reviewAuthor__4tH1p\"};","import { fetchGetMovieReviews } from '../../services/filmApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieReviews(id).then(setReviews);\n  }, [id]);\n\n  return (\n    <>\n      {reviews && reviews.total_results === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      <ul className={s.reviewList}>\n        {reviews &&\n          reviews.results.map(review => (\n            <li key={review.id} className={s.reviewBox}>\n              <h3 className={s.reviewAuthor}>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","axios","response","data","movies","alert","console","log","Promise","reject","fetchPopularFilms","fetchSearchMovies","query","fetchGetMovieDetails","id","fetchGetMovieCredits","fetchGetMovieReviews","useParams","useState","reviews","setReviews","useEffect","then","total_results","className","s","results","map","review","author","content"],"sourceRoot":""}