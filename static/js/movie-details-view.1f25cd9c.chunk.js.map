{"version":3,"file":"static/js/movie-details-view.1f25cd9c.chunk.js","mappings":"8NACA,EAA+B,uCAA/B,EAAiF,mCAAjF,EAA8H,kCAA9H,EAAwK,gCAAxK,EAA8N,8CAA9N,EAAwR,oCAAxR,EAAuU,mCAAvU,EAAmX,iCAAnX,EAAga,oCAAha,EAAgd,oCAAhd,EAAggB,oCAAhgB,EAA+iB,mCAA/iB,EAA6lB,mCAA7lB,EAAuoB,+BAAvoB,EAAqrB,uCAArrB,EAAyuB,qC,8ECqGzuB,EAxFyB,WACvB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAkBC,EAAAA,EAAAA,QAAON,GAC/B,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA4Bb,GAA5B,2FAEUc,EAAAA,EAAAA,IAAqBd,GAAIe,KAAKP,GAFxC,sDAIII,EAAS,EAAD,IACRI,QAAQC,IAAR,MALJ,wDADc,yBAAC,SAAD,2BASdC,CAAalB,KACZ,CAACA,EAAIW,IAMR,OACEJ,IACE,UAACY,EAAA,EAAD,CAAWC,UAAWC,EAAtB,WACA,gBAAKD,UAAWC,EAAhB,UACA,mBACEC,KAAK,SACLC,QAVqB,WAAO,IAAD,IAC/BrB,GAAwB,OAAfO,QAAe,IAAfA,GAAA,UAAAA,EAAiBe,eAAjB,mBAA0BC,aAA1B,eAAiCC,OAAQ,MAU9CN,UAAWC,EAHb,UAKE,SAAC,cAAD,CAAsBM,MAAO,CAAEP,UAAU,GAAD,OAAKC,IAA7C,UACE,SAAC,MAAD,WAIN,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEO,IACErB,EAAasB,YAAb,yCACsCtB,EAAasB,aADnD,yEAIFC,IAAKvB,EAAawB,eAClBC,MAAM,WAGV,iBAAKZ,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UAAyBd,EAAawB,eAAtC,QACA,cAAGX,UAAWC,EAAd,+BAC8B,GAA5Bd,EAAa0B,aADf,QAGA,eAAIb,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAsCd,EAAa2B,YACnD,eAAId,UAAWC,EAAf,qBACA,uBACGd,EAAa4B,OAAOC,KAAI,SAAAC,GAAK,OAC5B,iBAAqBjB,UAAWC,EAAhC,SACGgB,EAAMC,MADED,EAAMrC,gBAOzB,4BACE,eAAIoB,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAQkB,GAAG,OAAOnC,SAAUA,EAA7C,qBAIF,yBACE,SAAC,KAAD,CAAMgB,UAAWC,EAAQkB,GAAG,UAA5B,2BAKJ,SAAC,KAAD,CAAQnC,SAAUA","sources":["webpack://goit-react-hw-05-movies/./src/views/MovieDetailsPage/MovieDetailsPage.module.css?8c08","views/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetailsPage_movieDetails__5TM0B\",\"movieBox\":\"MovieDetailsPage_movieBox__GguYp\",\"infoBox\":\"MovieDetailsPage_infoBox__nkKWe\",\"title\":\"MovieDetailsPage_title__beq+9\",\"overviewDescription\":\"MovieDetailsPage_overviewDescription__oB0W2\",\"userScore\":\"MovieDetailsPage_userScore__SHx+X\",\"overview\":\"MovieDetailsPage_overview__nnQR5\",\"genres\":\"MovieDetailsPage_genres__GcVUp\",\"additInfo\":\"MovieDetailsPage_additInfo__kqCjH\",\"buttonBox\":\"MovieDetailsPage_buttonBox__yzyv0\",\"genreItem\":\"MovieDetailsPage_genreItem__IxZjr\",\"imageBox\":\"MovieDetailsPage_imageBox__MzW99\",\"linkList\":\"MovieDetailsPage_linkList__GwmLV\",\"link\":\"MovieDetailsPage_link__GbpAo\",\"goBackButton\":\"MovieDetailsPage_goBackButton__Mvsmf\",\"searchIcon\":\"MovieDetailsPage_searchIcon__VqhCm\"};","import s from './MovieDetailsPage.module.css';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport { useState, useEffect, useRef } from 'react';\nimport { fetchGetMovieDetails } from '../../services/filmApi';\nimport { GoReply } from 'react-icons/go';\nimport Container from 'components/Container';\n\nconst MovieDetailsPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const locationHistory = useRef(location);\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    async function fetchDetails(id) {\n      try {\n        await fetchGetMovieDetails(id).then(setMovieDetails);\n      } catch (error) {\n        setError(error)\n        console.dir(error)\n      }\n    }\n    fetchDetails(id)\n  }, [id, error]);\n\n  const onClickGoBackButon = () => {\n    navigate(locationHistory?.current?.state?.from || '/');\n  };\n\n  return (\n    movieDetails && (\n      <Container className={s.movieDetails}>        \n      <div className={s.buttonBox}>\n      <button\n        type=\"button\"\n        onClick={onClickGoBackButon}\n        className={s.goBackButton}\n      >\n        <IconContext.Provider value={{ className: `${s.searchIcon}` }}>\n          <GoReply />\n        </IconContext.Provider>\n      </button>\n    </div>\n    <div className={s.movieBox}>\n      <div className={s.imageBox}>\n        <img\n          src={\n            movieDetails.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`\n              : `https://cdn.pixabay.com/photo/2016/03/31/18/36/cinema-1294496_1280.png`\n          }\n          alt={movieDetails.original_title}\n          width=\"280\"\n        />\n      </div>\n      <div className={s.infoBox}>\n        <h1 className={s.title}>{movieDetails.original_title} </h1>\n        <p className={s.userScore}>{`User Score: ${\n          movieDetails.vote_average * 10\n        }%`}</p>\n        <h2 className={s.overview}>Overview</h2>\n        <p className={s.overviewDescription}>{movieDetails.overview}</p>\n        <h3 className={s.genres}>Genres</h3>\n        <p>\n          {movieDetails.genres.map(genre => (\n            <span key={genre.id} className={s.genreItem}>\n              {genre.name}\n            </span>\n          ))}\n        </p>\n      </div>\n    </div>\n    <div>\n      <h3 className={s.additInfo}>Additional information</h3>\n      <ul className={s.linkList}>\n        <li>\n          <Link className={s.link} to=\"cast\" location={location}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={s.link} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet location={location} />\n    </div>\n        </Container>\n    )\n  );\n};\n\nexport default MovieDetailsPage;"],"names":["id","useParams","navigate","useNavigate","location","useLocation","useState","movieDetails","setMovieDetails","locationHistory","useRef","error","setError","useEffect","fetchGetMovieDetails","then","console","dir","fetchDetails","Container","className","s","type","onClick","current","state","from","value","src","poster_path","alt","original_title","width","vote_average","overview","genres","map","genre","name","to"],"sourceRoot":""}