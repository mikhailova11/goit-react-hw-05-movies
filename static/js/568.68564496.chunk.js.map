{"version":3,"file":"static/js/568.68564496.chunk.js","mappings":"4TAGMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,EAAuB,GAAvBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAsCC,GAAtC,kGAE+BC,IAAAA,IAAUD,GAFzC,cAEcE,EAFd,gBAG6BA,EAASC,KAHtC,cAGcC,EAHd,yBAIeA,GAJf,yCAMQC,MAAM,GAAD,cANb,kBAOeC,QAAQC,OAAR,OAPf,iFAWO,SAASC,IACZ,OAAOT,EAAuB,GAAD,OAAIF,EAAJ,oCAAwCC,IAGlE,SAASW,EAAkBC,GAC9B,OAAOX,EAAuB,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,4DAA2FY,IAGrH,SAASC,EAAqBC,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,oBAAwCd,EAAxC,oBAG1B,SAASe,EAAqBD,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,4BAAgDd,EAAhD,oBAG1B,SAASgB,EAAqBF,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,4BAAgDd,EAAhD,6B,8GCjCjC,EAA6B,4BAA7B,EAAqE,2BAArE,EAA+G,8B,SC8B/G,EA1BgB,WACd,IAAQiB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAqBC,GAAIM,KAAKF,KAC7B,CAACJ,KAGF,gCACGG,GAAqC,IAA1BA,EAAQI,gBAClB,qEAEF,eAAIC,UAAWC,EAAf,SACGN,GACCA,EAAQO,QAAQC,KAAI,SAAAC,GAAM,OACxB,gBAAoBJ,UAAWC,EAA/B,WACE,eAAID,UAAWC,EAAf,SAAgCG,EAAOC,UACvC,uBAAID,EAAOE,YAFJF,EAAOZ","sources":["services/filmApi.js","webpack://react-homework-template/./src/views/Reviews/Reviews.module.css?ff11","views/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '43826aff38e7e981731c2a4c4f74555d';\n\nasync function fetchWithErrorHandling(url) {\n    try {\n        const response = await axios.get(url);\n        const movies = await response.data;\n        return movies;\n      } catch (error) {\n        alert(`${error}`);\n        return Promise.reject(error);\n      }\n}\n\nexport function fetchPopularFilms() {\n    return fetchWithErrorHandling(`${BASE_URL}trending/all/day?api_key=${KEY}`)\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(`${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`)  \n}\n\nexport function fetchGetMovieDetails(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`) \n}\n\nexport function fetchGetMovieCredits(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`) \n}\n\nexport function fetchGetMovieReviews(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`) \n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__FNpjp\",\"reviewBox\":\"Reviews_reviewBox__uDOwO\",\"reviewAuthor\":\"Reviews_reviewAuthor__4tH1p\"};","import { fetchGetMovieReviews } from '../../services/filmApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieReviews(id).then(setReviews);\n  }, [id]);\n\n  return (\n    <>\n      {reviews && reviews.total_results === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      <ul className={s.reviewList}>\n        {reviews &&\n          reviews.results.map(review => (\n            <li key={review.id} className={s.reviewBox}>\n              <h3 className={s.reviewAuthor}>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","axios","response","data","movies","alert","Promise","reject","fetchPopularFilms","fetchSearchMovies","query","fetchGetMovieDetails","movieId","fetchGetMovieCredits","fetchGetMovieReviews","id","useParams","useState","reviews","setReviews","useEffect","then","total_results","className","s","results","map","review","author","content"],"sourceRoot":""}