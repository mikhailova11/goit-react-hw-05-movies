{"version":3,"file":"static/js/826.5c24ad72.chunk.js","mappings":"wMACA,GAAgB,SAAW,6BAA6B,UAAY,8BAA8B,WAAa,gC,SC+B/G,EA5BmB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,SACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACC,EAAA,EAAD,CAAWC,UAAWC,EAAAA,aAAtB,UACA,eAAID,UAAWC,EAAAA,UAAf,SAEGL,EAASM,QAAQC,KAAI,SAAAC,GAAK,OACzB,eAAmBJ,UAAWC,EAAAA,UAA9B,UACE,UAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMX,GAAhD,WACE,gBACEY,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAD5C,yEAIFC,IAAKP,EAAMQ,MACXC,MAAM,WAER,eAAIb,UAAWC,EAAAA,WAAf,SAA8BG,EAAMQ,YAX/BR,EAAME,a,qDCXvB,MAA0B,6B,SCS1B,EAPkB,SAAC,GAAc,IAAbQ,EAAY,EAAZA,SAChB,OACI,eAAId,UAAWC,EAAf,SACKa,M,+ECLb,GAAgB,OAAS,4B,yDC8DzB,EAxDmB,WACf,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,UAGpCC,EAAAA,EAAAA,YAAU,WACDF,IAGLG,EAAAA,EAAAA,IAAkBH,GAAYI,KAAKV,KAClC,CAACM,KAENE,EAAAA,EAAAA,YAAU,WACDP,IAGLQ,EAAAA,EAAAA,IAAkBR,GAAOS,KAAKV,KAC/B,CAACC,IAWJ,OAEA,iCACI,iBAAMU,SAZY,SAAAC,GAClBA,EAAEC,iBACGZ,EAILI,EAAgB,CAAEJ,MAAAA,IAHhBa,MAAM,6BASuB/B,UAAWC,EAAAA,WAA1C,UACI,kBACID,UAAWC,EAAAA,OACX+B,KAAK,OACLC,YAAY,YACZC,MAAOhB,EACPiB,SAAU,SAACN,GAAD,OAAOV,EAASU,EAAEO,cAAcF,YAMrDlB,IACA,iCAAE,SAACqB,EAAA,EAAD,mCACH,SAAC,IAAD,CAAYzC,SAAUoB,OAErBA,GAA+B,IAAvBA,EAAKsB,gBACb,SAACD,EAAA,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MoviesList.module.css?7a3b","components/MovieList/MovieList.js","webpack://goit-react-hw-05-movies/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","webpack://goit-react-hw-05-movies/./src/views/MoviesPage/MoviesPage.module.css?0f72","views/MoviesPage/MoviesPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"MoviesList_cardList__wj5f0\",\"movieCard\":\"MoviesList_movieCard__t3FKM\",\"movieTitle\":\"MoviesList_movieTitle__4c-8q\"};","import Container from 'components/Container';\nimport { Link, useNavigate } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({response}) => {\n  const location = useNavigate();\n \n  return (\n    <Container className={s.movieDetails}>\n    <ul className={s.movieList}>\n\n      {response.results.map(movie =>(\n        <li key={movie.id} className={s.movieCard}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                  : `https://cdn.pixabay.com/photo/2016/03/31/18/36/cinema-1294496_1280.png`\n              }\n              alt={movie.title}\n              width=\"200px\"\n            />\n            <h3 className={s.movieTitle}>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n\n    </ul>\n    </Container>\n  );\n};\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"PageHeading_heading__ewceW\"};","\nimport s from \"../PageHeading/PageHeading.module.css\";\n\nconst PageHeading=({children})=>{\n    return(\n        <h2 className={s.heading}>\n            {children}\n        </h2>\n    )\n}\nexport default PageHeading;","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"MoviesPage_search__KjsW0\"};","import s from './MoviesPage.module.css';\nimport PageHeading from \"components/PageHeading/PageHeading\";\nimport { useEffect, useState } from \"react\";\nimport { fetchSearchMovies } from \"services/filmApi\";\nimport MoviesList from \"components/MovieList\";\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n    const [film, setFilm] = useState(null);\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const queryValue = searchParams.get('query');\n\n\n    useEffect(() => {\n        if (!queryValue) {\n          return;\n        }\n        fetchSearchMovies(queryValue).then(setFilm);\n      }, [queryValue]);\n\n    useEffect(()=>{\n        if( !query){\n            return;\n        }\n        fetchSearchMovies(query).then(setFilm)\n    }, [query])\n\n    const onQuerySubmit = e => {\n        e.preventDefault();\n        if (!query) {\n          alert('Please, enter movie name');\n          return;\n        }\n        setSearchParams({ query });\n      };\n\n    return(\n   \n    <>\n        <form onSubmit={onQuerySubmit} className={s.searchForm}>\n            <input\n                className={s.search}\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={(e) => setQuery(e.currentTarget.value)}\n            />\n        \n            </form>\n            \n    \n    {film && \n    (<><PageHeading>List of found films</PageHeading>\n    <MoviesList response={film} /></>)}\n\n    {film && film.total_results === 0 && \n    (<PageHeading>There are no movies matching your search</PageHeading>)}\n    \n</>\n);\n};\n\nexport default MoviesPage;"],"names":["response","location","useNavigate","Container","className","s","results","map","movie","to","id","state","from","src","poster_path","alt","title","width","children","useState","film","setFilm","query","setQuery","useSearchParams","searchParams","setSearchParams","queryValue","get","useEffect","fetchSearchMovies","then","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","currentTarget","PageHeading","total_results"],"sourceRoot":""}