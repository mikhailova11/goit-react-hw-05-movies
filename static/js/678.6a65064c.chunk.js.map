{"version":3,"file":"static/js/678.6a65064c.chunk.js","mappings":"4TAGMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,EAAuB,GAAvBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAsCC,GAAtC,kGAE+BC,IAAAA,IAAUD,GAFzC,cAEcE,EAFd,gBAG6BA,EAASC,KAHtC,cAGcC,EAHd,yBAIeA,GAJf,yCAMQC,MAAM,GAAD,cANb,kBAOeC,QAAQC,OAAR,OAPf,iFAWO,SAASC,IACZ,OAAOT,EAAuB,GAAD,OAAIF,EAAJ,oCAAwCC,IAGlE,SAASW,EAAkBC,GAC9B,OAAOX,EAAuB,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,4DAA2FY,IAGrH,SAASC,EAAqBC,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,oBAAwCd,EAAxC,oBAG1B,SAASe,EAAqBD,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,4BAAgDd,EAAhD,oBAG1B,SAASgB,EAAqBF,GACjC,OAAOb,EAAuB,GAAD,OAAIF,EAAJ,iBAAqBe,EAArB,4BAAgDd,EAAhD,6B,8GCjCjC,EAA2B,uBAA3B,EAA8D,wB,SCwC9D,EApCa,WACX,IAAQiB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAqBE,GAAIM,KAAKF,KAC7B,CAACJ,KAGF,gCACGG,GAA6B,IAArBA,EAAKA,KAAKI,SACjB,kEAEF,eAAIC,UAAWC,EAAf,SACGN,GACCA,EAAKA,KAAKO,KAAI,SAAAC,GAAI,OAChB,gBAAyBH,UAAWC,EAApC,WACE,gBACEG,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cAD3C,qIAIFC,IAAKH,EAAKI,KACVC,MAAM,WAER,wBAAKL,EAAKI,QACV,uBAAI,QACJ,uBAAIJ,EAAKM,cAZFN,EAAKO","sources":["services/filmApi.js","webpack://react-homework-template/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '43826aff38e7e981731c2a4c4f74555d';\n\nasync function fetchWithErrorHandling(url) {\n    try {\n        const response = await axios.get(url);\n        const movies = await response.data;\n        return movies;\n      } catch (error) {\n        alert(`${error}`);\n        return Promise.reject(error);\n      }\n}\n\nexport function fetchPopularFilms() {\n    return fetchWithErrorHandling(`${BASE_URL}trending/all/day?api_key=${KEY}`)\n}\n\nexport function fetchSearchMovies(query) {\n    return fetchWithErrorHandling(`${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`)  \n}\n\nexport function fetchGetMovieDetails(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`) \n}\n\nexport function fetchGetMovieCredits(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`) \n}\n\nexport function fetchGetMovieReviews(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`) \n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"Cast_cardList__9bAQq\",\"movieCard\":\"Cast_movieCard__hHVaN\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchGetMovieCredits } from '../../services/filmApi';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieCredits(id).then(setCast);\n  }, [id]);\n\n  return (\n    <>\n      {cast && cast.cast.length === 0 && (\n        <p>We don't have any cast for this movie</p>\n      )}\n      <ul className={s.cardList}>\n        {cast &&\n          cast.cast.map(item => (\n            <li key={item.credit_id} className={s.movieCard}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${item.profile_path}`\n                    : `https://pixabay.com/get/g68da3d44c0cdd0d3f37381394d7c26cb4d605a22228ba5a0b9443c2001eebc8ce311a73747570bf4d5f798d922cd924a_1280.png`\n                }\n                alt={item.name}\n                width=\"150px\"\n              />\n              <h3>{item.name}</h3>\n              <p>{'as'}</p>\n              <p>{item.character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","axios","response","data","movies","alert","Promise","reject","fetchPopularFilms","fetchSearchMovies","query","fetchGetMovieDetails","movieId","fetchGetMovieCredits","fetchGetMovieReviews","id","useParams","useState","cast","setCast","useEffect","then","length","className","s","map","item","src","profile_path","alt","name","width","character","credit_id"],"sourceRoot":""}